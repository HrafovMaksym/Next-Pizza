generator client {
provider = "prisma-client-js"
}
datasource db {
    provider = "postgresql"
    url = env("POSTGRES_URL")
}
model User {
    id Int @id @default(autoincrement())
    fullName String
    email String @unique
    password String
    role UserRole @default(USER)
    provider String
    providerId Int

    cart Cart?
    verification VerificationCode?
    orders Order[]
    createdAt DateTime @default(now())
    updatedAt DateTime @updatedAt
}


model Category {
    id Int @id @default(autoincrement())
    name String
    products Product[]
}
model Product {
    id Int @id @default(autoincrement())
    name String
    imgUrl String
    price Float

    ingredients Ingredients[]
    items ProductItem[]

    category Category @relation(fields: [categoryId], references: [id])
    categoryId Int

    createdAt DateTime @default(now())
    updatedAt DateTime @updatedAt
}


model ProductItem {
    id Int @id @default(autoincrement())
    name String
    size Int?
    pizzaType Int?
    product Product @relation(fields: [productId], references: [id])
    productId Int
    createdAt DateTime @default(now())
    updatedAt DateTime @updatedAt
}
model Ingredients {
    id Int @id @default(autoincrement())

    name String
    price Float 
    imageUrl String 
    cartItem CartItem[]
    products Product[]
    createdAt DateTime @default(now())
    updatedAt DateTime @updatedAt
}
model Cart {

    id Int @id @default(autoincrement())
    user User? @relation(fields: [userId], references: [id]) 
    userId  Int?  @unique
    token String
    cartItem CartItem[]
    totalAmount Int
    createdAt DateTime @default(now())
    updatedAt DateTime @updatedAt
}
model CartItem{
     id Int @id @default(autoincrement())

    cart Cart @relation(fields: [cartId],references: [id])
    cartId Int

    ingredients Ingredients[]

    quantity Int
    createdAt DateTime @default(now())
    updatedAt DateTime @updatedAt
}
model Order{
     id Int @id @default(autoincrement())

    user User? @relation(fields: [userId], references: [id]) 
    userId  Int?  @unique
    token String

    totalAmount Int
    paymentId Int
    status OrderStatus
    items Json

    fullName String
    email String
    address String
    phone String
    comment String?

    createdAt DateTime @default(now())
    updatedAt DateTime @updatedAt

}
model VerificationCode { 
        id Int @id @default(autoincrement())
        user User? @relation(fields: [userId],references: [id])
        userId Int? @unique

        code String
        createdAt DateTime @default(now())
}
enum OrderStatus {
    PENDING
    SUCCEEDED
    CANCELLED
}
enum UserRole {
USER
ADMIN
}